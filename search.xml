<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OI 名言</title>
      <link href="/post/well-known-OI-sayings/"/>
      <url>/post/well-known-OI-sayings/</url>
      
        <content type="html"><![CDATA[<h2 id="《OI-子》三章"><a href="#《OI-子》三章" class="headerlink" title="《OI 子》三章"></a>《OI 子》三章</h2><blockquote><p>《骗分榜一，暴力爆零》by 20210732ktq<br>正解不如暴力，暴力不如骗分。一道题目，两种做法，想而编之而WA。夫想而编之，必有得正解者矣，然而WA者，是正解不如暴力也。手非不酸也，码非不短也，部分分非不多也，暴力非不正确也，排名第二，是暴力不如骗分也。故曰，AC不以思路之深，暴力不以代码之短，首杀不以手速之快。骗分者榜一，暴力者爆零。爆零之至，老师骂之。榜一之至，全球膜之。以全球之所膜，攻教练之所骂，故OIer有不战，战必AK。</p></blockquote><blockquote><p>《水题不能淫》by 20210927chr<br>chr曰：“ktq，xcx岂不诚奆佬哉？骗分而OIers惧，正解而OI熄。”<br>xrz曰：“是焉得为奆佬乎？子未学OI乎？奆佬之冠也，zc命之，蒟蒻之冠也，ls命之，往送之CSP，戒之曰：‘往之CSP，必敬必戒，无违考规！’以骗为正者，蒟蒻之道也。做天下之难题，写天下之正解，AK天下之比赛。AK，与OIers由之；不AK，自己切题。水题不能淫，难题不能移，毒瘤不能屈，此之谓奆佬。”</p></blockquote><blockquote><p>《生于练习，死于退费》by 20211202lxy<br>轩发于范赵之中，Sai_t举于richup之间，澜译举于冰火之中，孔韬棋举于gen，项承煦举于florr，蒋亦霖举于ma，故天将降大任于是人也，必先苦其射飞，劳其破产，饿其王塔，空乏连击，行拂乱其所为，使其停止退费，曾益其所不会。<br>人恒错，然后能改；减于空，缩于时，而后过；骗于分，暴于力，而后涨。入则无暴力骗分，出则无AC过题者，人恒寄。然后知生于练习而死于退费也。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>洛谷 P1131 题解</title>
      <link href="/post/luogu-p1131-editorial/"/>
      <url>/post/luogu-p1131-editorial/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.luogu.com.cn/problem/P1131">传送门</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>有一棵 $n$ 个节点的以 $s$ 为根的树。每条树边都有一个长度。每次操作可以把一条树边的长度加 $1$。</p><p>问：至少操作多少次，可以使根节点到每个叶子节点的距离相等。</p><h2 id="结论-1"><a href="#结论-1" class="headerlink" title="结论 $1$"></a>结论 $1$</h2><p>对于任意子树，其根节点到其每个叶子节点的距离相等。</p><blockquote><p><strong>证明</strong>：<br>反证法。<br>设对于根为 $R$ 的树的根为 $r$ 的某一子树，有两个叶子 $a$、$b$ 到 $r$ 的距离不等。<br>那么不妨设节点 $x$ 与 $y$ 间的距离为 $dis(x,y)$，则有<br>$$dis(a,r)\not&#x3D;dis(b,r)$$<br>所以<br>$$dis(a,r)+dis(r,R)\not&#x3D;dis(b,r)+dis(r,R)$$<br>得<br>$$dis(a,R)\not&#x3D;dis(b,R)$$<br>即 $a$、$b$ 到 $R$ 的距离不等。这与题目条件矛盾，所以命题成立。</p></blockquote><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>既然结论 $1$ 成立，那么先从最简单的情况入手。</p><p>如图，在这一棵以 $1$ 为根的树中，在操作后，根节点 $1$ 到叶子的距离最小是几？</p><p><img src="/blog_assets/editorial_luogu_p1131_1.png" alt="图 1"></p><p>很明显的，这个值应该是所有叶子到根的所有距离的最大值。</p><p>那么对于每个节点都实行此原则，就结束了。</p><h2 id="Code："><a href="#Code：" class="headerlink" title="Code："></a>Code：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">using</span> uint = <span class="hljs-type">unsigned</span>;<br><span class="hljs-keyword">using</span> ll = <span class="hljs-type">long</span> <span class="hljs-type">long</span>;<br><span class="hljs-keyword">using</span> ull = <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span>;<br><span class="hljs-keyword">using</span> pii = pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;;<br><span class="hljs-keyword">using</span> pll = pair&lt;ll,ll&gt;;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int ll</span><br><br><span class="hljs-type">int</span> hd[<span class="hljs-number">500005</span>&lt;&lt;<span class="hljs-number">1</span>],nxt[<span class="hljs-number">500005</span>&lt;&lt;<span class="hljs-number">1</span>],to[<span class="hljs-number">500005</span>&lt;&lt;<span class="hljs-number">1</span>],we[<span class="hljs-number">500005</span>&lt;&lt;<span class="hljs-number">1</span>],et=<span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-type">void</span> <span class="hljs-title">adde</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> v,<span class="hljs-type">int</span> w)</span> </span>&#123; ++et,to[et]=v,we[et]=w,nxt[et]=hd[u],hd[u]=et; &#125;<br><span class="hljs-type">int</span> n,s,ans,dp[<span class="hljs-number">500005</span>];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> fa)</span> </span>&#123;<br><span class="hljs-type">int</span> mx=<span class="hljs-number">0</span>,tot=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=hd[u],v,t; v=to[i],t=we[i],i; i=nxt[i]) &#123;<br><span class="hljs-keyword">if</span>(v==fa) <span class="hljs-keyword">continue</span>;<br><span class="hljs-built_in">dfs</span>(v,u);<br><span class="hljs-keyword">if</span>(dp[v]+t&gt;mx) &#123;<br>ans+=(dp[v]+t-mx)*tot;<br>mx=dp[v]+t;<br>&#125; <span class="hljs-keyword">else</span> ans+=(mx-dp[v]-t);<br>++tot;<br>&#125;<br>dp[u]=mx;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>cin&gt;&gt;n&gt;&gt;s;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>; i&lt;n; ++i) &#123;<br><span class="hljs-type">int</span> u,v,t;<br>cin&gt;&gt;u&gt;&gt;v&gt;&gt;t;<br><span class="hljs-built_in">adde</span>(u,v,t); <span class="hljs-built_in">adde</span>(v,u,t);<br>&#125;<br><span class="hljs-built_in">dfs</span>(s,<span class="hljs-number">0</span>);<br>cout&lt;&lt;ans&lt;&lt;endl;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> editorial </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/hello-world/"/>
      <url>/post/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
